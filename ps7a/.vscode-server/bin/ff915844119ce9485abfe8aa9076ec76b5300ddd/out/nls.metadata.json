{
	"keys": {
		"vs/platform/environment/node/argv": [
			"optionsUpperCase",
			"extensionsManagement",
			"troubleshooting",
			"diff",
			"add",
			"goto",
			"newWindow",
			"reuseWindow",
			"folderUri",
			"fileUri",
			"wait",
			"locale",
			"userDataDir",
			"help",
			"extensionHomePath",
			"listExtensions",
			"showVersions",
			"category",
			"installExtension",
			"uninstallExtension",
			"experimentalApis",
			"version",
			"verbose",
			"log",
			"status",
			"prof-startup",
			"disableExtensions",
			"disableExtension",
			"turn sync",
			"inspect-extensions",
			"inspect-brk-extensions",
			"disableGPU",
			"maxMemory",
			"telemetry",
			"usage",
			"options",
			"paths",
			"stdinWindows",
			"stdinUnix",
			"unknownVersion",
			"unknownCommit"
		],
		"vs/platform/request/common/request": [
			"httpConfigurationTitle",
			"proxy",
			"strictSSL",
			"proxyAuthorization",
			"proxySupportOff",
			"proxySupportOn",
			"proxySupportOverride",
			"proxySupport",
			"systemCertificates"
		],
		"vs/platform/files/node/diskFileSystemProvider": [
			"fileExists",
			"fileNotExists",
			"moveError",
			"copyError",
			"fileCopyErrorPathCase",
			"fileCopyErrorExists"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"extensions",
			"preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"invalidManifest",
			"incompatible",
			"restartCode",
			"restartCode",
			"MarketPlaceDisabled",
			"malicious extension",
			"notFoundCompatibleDependency",
			"MarketPlaceDisabled",
			"removeError",
			"Not a Marketplace extension",
			"quitCode",
			"exitCode",
			"errorDeleting",
			"cannot read",
			"renameError",
			"notInstalled",
			"singleDependentError",
			"twoDependentsError",
			"multipleDependentsError",
			"notExists"
		],
		"vs/base/common/date": [
			"date.fromNow.now",
			"date.fromNow.seconds.singular.ago",
			"date.fromNow.seconds.plural.ago",
			"date.fromNow.seconds.singular",
			"date.fromNow.seconds.plural",
			"date.fromNow.minutes.singular.ago",
			"date.fromNow.minutes.plural.ago",
			"date.fromNow.minutes.singular",
			"date.fromNow.minutes.plural",
			"date.fromNow.hours.singular.ago",
			"date.fromNow.hours.plural.ago",
			"date.fromNow.hours.singular",
			"date.fromNow.hours.plural",
			"date.fromNow.days.singular.ago",
			"date.fromNow.days.plural.ago",
			"date.fromNow.days.singular",
			"date.fromNow.days.plural",
			"date.fromNow.weeks.singular.ago",
			"date.fromNow.weeks.plural.ago",
			"date.fromNow.weeks.singular",
			"date.fromNow.weeks.plural",
			"date.fromNow.months.singular.ago",
			"date.fromNow.months.plural.ago",
			"date.fromNow.months.singular",
			"date.fromNow.months.plural",
			"date.fromNow.years.singular.ago",
			"date.fromNow.years.plural.ago",
			"date.fromNow.years.singular",
			"date.fromNow.years.plural"
		],
		"vs/platform/files/common/files": [
			"unknownError"
		],
		"vs/platform/files/common/fileService": [
			"invalidPath",
			"noProviderFound",
			"fileNotFoundError",
			"fileExists",
			"err.write",
			"fileIsDirectoryWriteError",
			"fileModifiedError",
			"err.read",
			"err.read",
			"fileIsDirectoryReadError",
			"fileNotModifiedError",
			"fileTooLargeError",
			"unableToMoveCopyError1",
			"unableToMoveCopyError2",
			"unableToMoveCopyError3",
			"unableToMoveCopyError4",
			"mkdirExistsError",
			"deleteFailedTrashUnsupported",
			"deleteFailedNotFound",
			"deleteFailedNonEmptyFolder",
			"err.readonly"
		],
		"vs/code/node/cliProcessMain": [
			"notFound",
			"notInstalled",
			"useId",
			"installingExtensions",
			"installation failed",
			"successVsixInstall",
			"cancelVsixInstall",
			"alreadyInstalled",
			"forceUpdate",
			"updateMessage",
			"forceDowngrade",
			"installing",
			"successInstall",
			"cancelVsixInstall",
			"uninstalling",
			"successUninstall"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"telemetryConfigurationTitle",
			"telemetry.enableTelemetry"
		],
		"vs/server/remoteAgentEnvironmentImpl": [
			"overwritingExtension"
		],
		"vs/base/common/errorMessage": [
			"stackTrace.format",
			"nodeExceptionMessage",
			"error.defaultMessage",
			"error.defaultMessage",
			"error.moreErrors",
			"error.defaultMessage"
		],
		"vs/base/node/processes": [
			"TaskRunner.UNC"
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"defaultConfigurations.title",
			"overrideSettings.description",
			"overrideSettings.defaultDescription",
			"overrideSettings.errorMessage",
			"config.property.languageDefault",
			"config.property.duplicate"
		],
		"vs/platform/extensions/common/extensionValidator": [
			"versionSyntax",
			"versionSpecificity1",
			"versionSpecificity2",
			"versionMismatch"
		],
		"vs/platform/files/common/io": [
			"fileTooLargeForHeapError",
			"fileTooLargeError"
		],
		"vs/base/node/zip": [
			"invalid file",
			"incompleteExtract",
			"notFound"
		],
		"vs/platform/extensionManagement/node/extensionManagementUtil": [
			"invalidManifest"
		],
		"vs/workbench/services/extensions/node/extensionPoints": [
			"jsonParseFail",
			"fileReadFail",
			"jsonsParseReportErrors",
			"jsonInvalidFormat",
			"missingNLSKey",
			"notSemver",
			"extensionDescription.empty",
			"extensionDescription.publisher",
			"extensionDescription.name",
			"extensionDescription.version",
			"extensionDescription.engines",
			"extensionDescription.engines.vscode",
			"extensionDescription.extensionDependencies",
			"extensionDescription.activationEvents1",
			"extensionDescription.activationEvents2",
			"extensionDescription.main1",
			"extensionDescription.main2",
			"extensionDescription.main3"
		],
		"vs/workbench/api/common/extHostExtensionService": [
			"extensionTestError"
		],
		"vs/workbench/api/common/extHostWorkspace": [
			"updateerror"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"debug.terminal.title"
		],
		"vs/base/common/jsonErrorMessages": [
			"error.invalidSymbol",
			"error.invalidNumberFormat",
			"error.propertyNameExpected",
			"error.valueExpected",
			"error.colonExpected",
			"error.commaExpected",
			"error.closeBraceExpected",
			"error.closeBracketExpected",
			"error.endOfFileExpected"
		],
		"vs/workbench/api/common/extHostExtensionActivator": [
			"failedDep1",
			"activationError"
		],
		"vs/workbench/contrib/terminal/common/terminal": [
			"terminalCategory"
		],
		"vs/workbench/contrib/debug/node/debugAdapter": [
			"debugAdapterBinNotFound",
			{
				"key": "debugAdapterCannotDetermineExecutable",
				"comment": [
					"Adapter executable file not found"
				]
			},
			"unableToLaunchDebugAdapter",
			"unableToLaunchDebugAdapterNoArgs"
		],
		"vs/workbench/services/configurationResolver/common/variableResolver": [
			"canNotResolveFile",
			"canNotFindFolder",
			"canNotResolveWorkspaceFolderMultiRoot",
			"canNotResolveWorkspaceFolder",
			"missingEnvVarName",
			"configNotFound",
			"configNoString",
			"missingConfigName",
			"canNotResolveLineNumber",
			"canNotResolveSelectedText",
			"noValueForCommand"
		],
		"vs/workbench/api/common/extHost.api.impl": [
			"extensionLabel"
		],
		"vs/base/common/severity": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/platform/workspaces/common/workspaces": [
			"codeWorkspace"
		],
		"vs/platform/markers/common/markers": [
			"sev.error",
			"sev.warning",
			"sev.info"
		],
		"vs/workbench/contrib/externalTerminal/node/externalTerminalService": [
			"console.title",
			"mac.terminal.script.failed",
			"mac.terminal.type.not.supported",
			"press.any.key",
			"linux.term.failed",
			"ext.term.app.not.found",
			"terminalConfigurationTitle",
			"terminal.explorerKind.integrated",
			"terminal.explorerKind.external",
			"explorer.openInTerminalKind",
			"terminal.external.windowsExec",
			"terminal.external.osxExec",
			"terminal.external.linuxExec"
		],
		"vs/workbench/api/common/extHostDiagnostics": [
			{
				"key": "limitHit",
				"comment": [
					"amount of errors/warning skipped due to limits"
				]
			}
		],
		"vs/editor/common/config/editorOptions": [
			"accessibilitySupport.auto",
			"accessibilitySupport.on",
			"accessibilitySupport.off",
			"accessibilitySupport",
			"comments.insertSpace",
			"emptySelectionClipboard",
			"find.seedSearchStringFromSelection",
			"editor.find.autoFindInSelection.never",
			"editor.find.autoFindInSelection.always",
			"editor.find.autoFindInSelection.multiline",
			"find.autoFindInSelection",
			"find.globalFindClipboard",
			"find.addExtraSpaceOnTop",
			"fontLigatures",
			"fontFeatureSettings",
			"fontLigaturesGeneral",
			"fontSize",
			"editor.gotoLocation.multiple.peek",
			"editor.gotoLocation.multiple.gotoAndPeek",
			"editor.gotoLocation.multiple.goto",
			"editor.gotoLocation.multiple.deprecated",
			"editor.editor.gotoLocation.multipleDefinitions",
			"editor.editor.gotoLocation.multipleTypeDefinitions",
			"editor.editor.gotoLocation.multipleDeclarations",
			"editor.editor.gotoLocation.multipleImplemenattions",
			"editor.editor.gotoLocation.multipleReferences",
			"alternativeDefinitionCommand",
			"alternativeTypeDefinitionCommand",
			"alternativeDeclarationCommand",
			"alternativeImplementationCommand",
			"alternativeReferenceCommand",
			"hover.enabled",
			"hover.delay",
			"hover.sticky",
			"codeActions",
			"lineHeight",
			"minimap.enabled",
			"minimap.size.proportional",
			"minimap.size.fill",
			"minimap.size.fit",
			"minimap.size",
			"minimap.side",
			"minimap.showSlider",
			"minimap.scale",
			"minimap.renderCharacters",
			"minimap.maxColumn",
			"padding.top",
			"padding.bottom",
			"parameterHints.enabled",
			"parameterHints.cycle",
			"quickSuggestions.strings",
			"quickSuggestions.comments",
			"quickSuggestions.other",
			"quickSuggestions",
			"lineNumbers.off",
			"lineNumbers.on",
			"lineNumbers.relative",
			"lineNumbers.interval",
			"lineNumbers",
			"rulers.size",
			"rulers.color",
			"rulers",
			"suggest.insertMode.insert",
			"suggest.insertMode.replace",
			"suggest.insertMode",
			"suggest.filterGraceful",
			"suggest.localityBonus",
			"suggest.shareSuggestSelections",
			"suggest.snippetsPreventQuickSuggestions",
			"suggest.showIcons",
			"suggest.maxVisibleSuggestions",
			"deprecated",
			"editor.suggest.showMethods",
			"editor.suggest.showFunctions",
			"editor.suggest.showConstructors",
			"editor.suggest.showFields",
			"editor.suggest.showVariables",
			"editor.suggest.showClasss",
			"editor.suggest.showStructs",
			"editor.suggest.showInterfaces",
			"editor.suggest.showModules",
			"editor.suggest.showPropertys",
			"editor.suggest.showEvents",
			"editor.suggest.showOperators",
			"editor.suggest.showUnits",
			"editor.suggest.showValues",
			"editor.suggest.showConstants",
			"editor.suggest.showEnums",
			"editor.suggest.showEnumMembers",
			"editor.suggest.showKeywords",
			"editor.suggest.showTexts",
			"editor.suggest.showColors",
			"editor.suggest.showFiles",
			"editor.suggest.showReferences",
			"editor.suggest.showCustomcolors",
			"editor.suggest.showFolders",
			"editor.suggest.showTypeParameters",
			"editor.suggest.showSnippets",
			"editor.suggest.showUsers",
			"editor.suggest.showIssues",
			"editor.suggest.statusBar.visible",
			"acceptSuggestionOnCommitCharacter",
			"acceptSuggestionOnEnterSmart",
			"acceptSuggestionOnEnter",
			"accessibilityPageSize",
			"editorViewAccessibleLabel",
			"editor.autoClosingBrackets.languageDefined",
			"editor.autoClosingBrackets.beforeWhitespace",
			"autoClosingBrackets",
			"editor.autoClosingOvertype.auto",
			"autoClosingOvertype",
			"editor.autoClosingQuotes.languageDefined",
			"editor.autoClosingQuotes.beforeWhitespace",
			"autoClosingQuotes",
			"editor.autoIndent.none",
			"editor.autoIndent.keep",
			"editor.autoIndent.brackets",
			"editor.autoIndent.advanced",
			"editor.autoIndent.full",
			"autoIndent",
			"editor.autoSurround.languageDefined",
			"editor.autoSurround.quotes",
			"editor.autoSurround.brackets",
			"autoSurround",
			"codeLens",
			"colorDecorators",
			"columnSelection",
			"copyWithSyntaxHighlighting",
			"cursorBlinking",
			"cursorSmoothCaretAnimation",
			"cursorStyle",
			"cursorSurroundingLines",
			"cursorSurroundingLinesStyle.default",
			"cursorSurroundingLinesStyle.all",
			"cursorSurroundingLinesStyle",
			"cursorWidth",
			"dragAndDrop",
			"fastScrollSensitivity",
			"folding",
			"foldingStrategy.auto",
			"foldingStrategy.indentation",
			"foldingStrategy",
			"foldingHighlight",
			"unfoldOnClickAfterEndOfLine",
			"fontFamily",
			"fontWeight",
			"formatOnPaste",
			"formatOnType",
			"glyphMargin",
			"hideCursorInOverviewRuler",
			"highlightActiveIndentGuide",
			"letterSpacing",
			"links",
			"matchBrackets",
			"mouseWheelScrollSensitivity",
			"mouseWheelZoom",
			"multiCursorMergeOverlapping",
			"multiCursorModifier.ctrlCmd",
			"multiCursorModifier.alt",
			{
				"key": "multiCursorModifier",
				"comment": [
					"- `ctrlCmd` refers to a value the setting can take and should not be localized.",
					"- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized."
				]
			},
			"multiCursorPaste.spread",
			"multiCursorPaste.full",
			"multiCursorPaste",
			"occurrencesHighlight",
			"overviewRulerBorder",
			"peekWidgetDefaultFocus.tree",
			"peekWidgetDefaultFocus.editor",
			"peekWidgetDefaultFocus",
			"definitionLinkOpensInPeek",
			"quickSuggestionsDelay",
			"renameOnType",
			"renderControlCharacters",
			"renderIndentGuides",
			"renderFinalNewline",
			"renderLineHighlight.all",
			"renderLineHighlight",
			"renderLineHighlightOnlyWhenFocus",
			"renderWhitespace.boundary",
			"renderWhitespace.selection",
			"renderWhitespace",
			"roundedSelection",
			"scrollBeyondLastColumn",
			"scrollBeyondLastLine",
			"scrollPredominantAxis",
			"selectionClipboard",
			"selectionHighlight",
			"showFoldingControls.always",
			"showFoldingControls.mouseover",
			"showFoldingControls",
			"showUnused",
			"snippetSuggestions.top",
			"snippetSuggestions.bottom",
			"snippetSuggestions.inline",
			"snippetSuggestions.none",
			"snippetSuggestions",
			"smoothScrolling",
			"suggestFontSize",
			"suggestLineHeight",
			"suggestOnTriggerCharacters",
			"suggestSelection.first",
			"suggestSelection.recentlyUsed",
			"suggestSelection.recentlyUsedByPrefix",
			"suggestSelection",
			"tabCompletion.on",
			"tabCompletion.off",
			"tabCompletion.onlySnippets",
			"tabCompletion",
			"useTabStops",
			"wordSeparators",
			"wordWrap.off",
			"wordWrap.on",
			{
				"key": "wordWrap.wordWrapColumn",
				"comment": [
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap.bounded",
				"comment": [
					"- viewport means the edge of the visible window size.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrap",
				"comment": [
					"- 'off', 'on', 'wordWrapColumn' and 'bounded' refer to values the setting can take and should not be localized.",
					"- `editor.wordWrapColumn` refers to a different setting and should not be localized."
				]
			},
			{
				"key": "wordWrapColumn",
				"comment": [
					"- `editor.wordWrap` refers to a different setting and should not be localized.",
					"- 'wordWrapColumn' and 'bounded' refer to values the different setting can take and should not be localized."
				]
			},
			"wrappingIndent.none",
			"wrappingIndent.same",
			"wrappingIndent.indent",
			"wrappingIndent.deepIndent",
			"wrappingIndent",
			"wrappingStrategy.simple",
			"wrappingStrategy.advanced",
			"wrappingStrategy"
		],
		"vs/workbench/api/common/extHostProgress": [
			"extensionSource"
		],
		"vs/workbench/api/common/extHostStatusBar": [
			"status.extensionMessage"
		],
		"vs/workbench/api/common/extHostTreeViews": [
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.notRegistered",
			"treeView.duplicateElement"
		]
	},
	"messages": {
		"vs/platform/environment/node/argv": [
			"Options",
			"Extensions Management",
			"Troubleshooting",
			"Compare two files with each other.",
			"Add folder(s) to the last active window.",
			"Open a file at the path on the specified line and character position.",
			"Force to open a new window.",
			"Force to open a file or folder in an already opened window.",
			"Opens a window with given folder uri(s)",
			"Opens a window with given file uri(s)",
			"Wait for the files to be closed before returning.",
			"The locale to use (e.g. en-US or zh-TW).",
			"Specifies the directory that user data is kept in. Can be used to open multiple distinct instances of Code.",
			"Print usage.",
			"Set the root path for extensions.",
			"List the installed extensions.",
			"Show versions of installed extensions, when using --list-extension.",
			"Filters installed extensions by provided category, when using --list-extension.",
			"Installs or updates the extension. Use `--force` argument to avoid prompts.",
			"Uninstalls an extension.",
			"Enables proposed API features for extensions. Can receive one or more extension IDs to enable individually.",
			"Print version.",
			"Print verbose output (implies --wait).",
			"Log level to use. Default is 'info'. Allowed values are 'critical', 'error', 'warn', 'info', 'debug', 'trace', 'off'.",
			"Print process usage and diagnostics information.",
			"Run CPU profiler during startup",
			"Disable all installed extensions.",
			"Disable an extension.",
			"Turn sync on or off",
			"Allow debugging and profiling of extensions. Check the developer tools for the connection URI.",
			"Allow debugging and profiling of extensions with the extension host being paused after start. Check the developer tools for the connection URI.",
			"Disable GPU hardware acceleration.",
			"Max memory size for a window (in Mbytes).",
			"Shows all telemetry events which VS code collects.",
			"Usage",
			"options",
			"paths",
			"To read output from another program, append '-' (e.g. 'echo Hello World | {0} -')",
			"To read from stdin, append '-' (e.g. 'ps aux | grep code | {0} -')",
			"Unknown version",
			"Unknown commit"
		],
		"vs/platform/request/common/request": [
			"HTTP",
			"The proxy setting to use. If not set, will be inherited from the `http_proxy` and `https_proxy` environment variables.",
			"Controls whether the proxy server certificate should be verified against the list of supplied CAs.",
			"The value to send as the `Proxy-Authorization` header for every network request.",
			"Disable proxy support for extensions.",
			"Enable proxy support for extensions.",
			"Enable proxy support for extensions, override request options.",
			"Use the proxy support for extensions.",
			"Controls whether CA certificates should be loaded from the OS. (On Windows and macOS a reload of the window is required after turning this off.)"
		],
		"vs/platform/files/node/diskFileSystemProvider": [
			"File already exists",
			"File does not exist",
			"Unable to move '{0}' into '{1}' ({2}).",
			"Unable to copy '{0}' into '{1}' ({2}).",
			"'File cannot be copied to same path with different path case",
			"File at target already exists"
		],
		"vs/platform/extensionManagement/common/extensionManagement": [
			"Extensions",
			"Preferences"
		],
		"vs/platform/extensionManagement/node/extensionManagementService": [
			"Extension invalid: package.json is not a JSON file.",
			"Unable to install extension '{0}' as it is not compatible with VS Code '{1}'.",
			"Please restart VS Code before reinstalling {0}.",
			"Please restart VS Code before reinstalling {0}.",
			"Marketplace is not enabled",
			"Can't install extension since it was reported to be problematic.",
			"Unable to install '{0}' extension because it is not compatible with the current version of VS Code (version {1}).",
			"Marketplace is not enabled",
			"Error while removing the extension: {0}. Please Quit and Start VS Code before trying again.",
			"Only Marketplace Extensions can be reinstalled",
			"Unable to install the extension. Please Quit and Start VS Code before reinstalling.",
			"Unable to install the extension. Please Exit and Start VS Code before reinstalling.",
			"Unable to delete the existing folder '{0}' while installing the extension '{1}'. Please delete the folder manually and try again",
			"Cannot read the extension from {0}",
			"Unknown error while renaming {0} to {1}",
			"Extension '{0}' is not installed.",
			"Cannot uninstall extension '{0}'. Extension '{1}' depends on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}' and '{2}' depend on this.",
			"Cannot uninstall extension '{0}'. Extensions '{1}', '{2}' and others depend on this.",
			"Could not find extension"
		],
		"vs/base/common/date": [
			"now",
			"{0} sec ago",
			"{0} secs ago",
			"{0} sec",
			"{0} secs",
			"{0} min ago",
			"{0} mins ago",
			"{0} min",
			"{0} mins",
			"{0} hr ago",
			"{0} hrs ago",
			"{0} hr",
			"{0} hrs",
			"{0} day ago",
			"{0} days ago",
			"{0} day",
			"{0} days",
			"{0} wk ago",
			"{0} wks ago",
			"{0} wk",
			"{0} wks",
			"{0} mo ago",
			"{0} mos ago",
			"{0} mo",
			"{0} mos",
			"{0} yr ago",
			"{0} yrs ago",
			"{0} yr",
			"{0} yrs"
		],
		"vs/platform/files/common/files": [
			"Unknown Error"
		],
		"vs/platform/files/common/fileService": [
			"Unable to resolve filesystem provider with relative file path '{0}'",
			"No file system provider found for resource '{0}'",
			"Unable to resolve non-existing file '{0}'",
			"Unable to create file '{0}' that already exists when overwrite flag is not set",
			"Unable to write file '{0}' ({1})",
			"Unable to write file '{0}' that is actually a directory",
			"File Modified Since",
			"Unable to read file '{0}' ({1})",
			"Unable to read file '{0}' ({1})",
			"Unable to read file '{0}' that is actually a directory",
			"File not modified since",
			"Unable to read file '{0}' that is too large to open",
			"Unable to copy when source '{0}' is same as target '{1}' with different path case on a case insensitive file system",
			"Unable to move/copy when source '{0}' is parent of target '{1}'.",
			"Unable to move/copy '{0}' because target '{1}' already exists at destination.",
			"Unable to move/copy '{0}' into '{1}' since a file would replace the folder it is contained in.",
			"Unable to create folder '{0}' that already exists but is not a directory",
			"Unable to delete file '{0}' via trash because provider does not support it.",
			"Unable to delete non-existing file '{0}'",
			"Unable to delete non-empty folder '{0}'.",
			"Unable to modify readonly file '{0}'"
		],
		"vs/code/node/cliProcessMain": [
			"Extension '{0}' not found.",
			"Extension '{0}' is not installed.",
			"Make sure you use the full extension ID, including the publisher, e.g.: {0}",
			"Installing extensions...",
			"Failed Installing Extensions: {0}",
			"Extension '{0}' was successfully installed.",
			"Cancelled installing extension '{0}'.",
			"Extension '{0}' is already installed.",
			"Extension '{0}' v{1} is already installed, but a newer version {2} is available in the marketplace. Use '--force' option to update to newer version.",
			"Updating the extension '{0}' to the version {1}",
			"A newer version of extension '{0}' v{1} is already installed. Use '--force' option to downgrade to older version.",
			"Installing extension '{0}' v{1}...",
			"Extension '{0}' v{1} was successfully installed.",
			"Cancelled installing extension '{0}'.",
			"Uninstalling {0}...",
			"Extension '{0}' was successfully uninstalled!"
		],
		"vs/platform/telemetry/common/telemetryService": [
			"Telemetry",
			"Enable usage data and errors to be sent to a Microsoft online service."
		],
		"vs/server/remoteAgentEnvironmentImpl": [
			"Overwriting extension {0} with {1}."
		],
		"vs/base/common/errorMessage": [
			"{0}: {1}",
			"A system error occurred ({0})",
			"An unknown error occurred. Please consult the log for more details.",
			"An unknown error occurred. Please consult the log for more details.",
			"{0} ({1} errors in total)",
			"An unknown error occurred. Please consult the log for more details."
		],
		"vs/base/node/processes": [
			"Can't execute a shell command on a UNC drive."
		],
		"vs/platform/configuration/common/configurationRegistry": [
			"Default Configuration Overrides",
			"Configure editor settings to be overridden for {0} language.",
			"Configure editor settings to be overridden for a language.",
			"This setting does not support per-language configuration.",
			"Cannot register '{0}'. This matches property pattern '\\\\[.*\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.",
			"Cannot register '{0}'. This property is already registered."
		],
		"vs/platform/extensions/common/extensionValidator": [
			"Could not parse `engines.vscode` value {0}. Please use, for example: ^1.22.0, ^1.22.x, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions before 1.0.0, please define at a minimum the major and minor desired version. E.g. ^0.10.0, 0.10.x, 0.11.0, etc.",
			"Version specified in `engines.vscode` ({0}) is not specific enough. For vscode versions after 1.0.0, please define at a minimum the major desired version. E.g. ^1.10.0, 1.10.x, 1.x.x, 2.x.x, etc.",
			"Extension is not compatible with Code {0}. Extension requires: {1}."
		],
		"vs/platform/files/common/io": [
			"To open a file of this size, you need to restart and allow it to use more memory",
			"File is too large to open"
		],
		"vs/base/node/zip": [
			"Error extracting {0}. Invalid file.",
			"Incomplete. Found {0} of {1} entries",
			"{0} not found inside zip."
		],
		"vs/platform/extensionManagement/node/extensionManagementUtil": [
			"VSIX invalid: package.json is not a JSON file."
		],
		"vs/workbench/services/extensions/node/extensionPoints": [
			"Failed to parse {0}: [{1}, {2}] {3}.",
			"Cannot read file {0}: {1}.",
			"Failed to parse {0}: {1}.",
			"Invalid format {0}: JSON object expected.",
			"Couldn't find message for key {0}.",
			"Extension version is not semver compatible.",
			"Got empty extension description",
			"property publisher must be of type `string`.",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` is mandatory and must be of type `object`",
			"property `{0}` is mandatory and must be of type `string`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"property `{0}` can be omitted or must be of type `string[]`",
			"properties `{0}` and `{1}` must both be specified or must both be omitted",
			"property `{0}` can be omitted or must be of type `string`",
			"Expected `main` ({0}) to be included inside extension's folder ({1}). This might make the extension non-portable.",
			"properties `{0}` and `{1}` must both be specified or must both be omitted"
		],
		"vs/workbench/api/common/extHostExtensionService": [
			"Path {0} does not point to a valid extension test runner."
		],
		"vs/workbench/api/common/extHostWorkspace": [
			"Extension '{0}' failed to update workspace folders: {1}"
		],
		"vs/workbench/api/node/extHostDebugService": [
			"debuggee"
		],
		"vs/base/common/jsonErrorMessages": [
			"Invalid symbol",
			"Invalid number format",
			"Property name expected",
			"Value expected",
			"Colon expected",
			"Comma expected",
			"Closing brace expected",
			"Closing bracket expected",
			"End of file expected"
		],
		"vs/workbench/api/common/extHostExtensionActivator": [
			"Cannot activate extension '{0}' because it depends on extension '{1}', which failed to activate.",
			"Activating extension '{0}' failed: {1}."
		],
		"vs/workbench/contrib/terminal/common/terminal": [
			"Terminal"
		],
		"vs/workbench/contrib/debug/node/debugAdapter": [
			"Debug adapter executable '{0}' does not exist.",
			"Cannot determine executable for debug adapter '{0}'.",
			"Unable to launch debug adapter from '{0}'.",
			"Unable to launch debug adapter."
		],
		"vs/workbench/services/configurationResolver/common/variableResolver": [
			"'{0}' can not be resolved. Please open an editor.",
			"'{0}' can not be resolved. No such folder '{1}'.",
			"'{0}' can not be resolved in a multi folder workspace. Scope this variable using ':' and a workspace folder name.",
			"'{0}' can not be resolved. Please open a folder.",
			"'{0}' can not be resolved because no environment variable name is given.",
			"'{0}' can not be resolved because setting '{1}' not found.",
			"'{0}' can not be resolved because '{1}' is a structured value.",
			"'{0}' can not be resolved because no settings name is given.",
			"'{0}' can not be resolved. Make sure to have a line selected in the active editor.",
			"'{0}' can not be resolved. Make sure to have some text selected in the active editor.",
			"'{0}' can not be resolved because the command has no value."
		],
		"vs/workbench/api/common/extHost.api.impl": [
			"{0} (Extension)"
		],
		"vs/base/common/severity": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/platform/workspaces/common/workspaces": [
			"Code Workspace"
		],
		"vs/platform/markers/common/markers": [
			"Error",
			"Warning",
			"Info"
		],
		"vs/workbench/contrib/externalTerminal/node/externalTerminalService": [
			"VS Code Console",
			"Script '{0}' failed with exit code {1}",
			"'{0}' not supported",
			"Press any key to continue...",
			"'{0}' failed with exit code {1}",
			"can't find terminal application '{0}'",
			"External Terminal",
			"Use VS Code's integrated terminal.",
			"Use the configured external terminal.",
			"Customizes what kind of terminal to launch.",
			"Customizes which terminal to run on Windows.",
			"Customizes which terminal application to run on macOS.",
			"Customizes which terminal to run on Linux."
		],
		"vs/workbench/api/common/extHostDiagnostics": [
			"Not showing {0} further errors and warnings."
		],
		"vs/editor/common/config/editorOptions": [
			"The editor will use platform APIs to detect when a Screen Reader is attached.",
			"The editor will be permanently optimized for usage with a Screen Reader.",
			"The editor will never be optimized for usage with a Screen Reader.",
			"Controls whether the editor should run in a mode where it is optimized for screen readers.",
			"Controls whether a space character is inserted when commenting.",
			"Controls whether copying without a selection copies the current line.",
			"Controls whether the search string in the Find Widget is seeded from the editor selection.",
			"Never turn on Find in selection automatically (default)",
			"Always turn on Find in selection automatically",
			"Turn on Find in selection automatically when multiple lines of content are selected.",
			"Controls whether the find operation is carried out on selected text or the entire file in the editor.",
			"Controls whether the Find Widget should read or modify the shared find clipboard on macOS.",
			"Controls whether the Find Widget should add extra lines on top of the editor. When true, you can scroll beyond the first line when the Find Widget is visible.",
			"Enables/Disables font ligatures.",
			"Explicit font-feature-settings.",
			"Configures font ligatures or font features.",
			"Controls the font size in pixels.",
			"Show peek view of the results (default)",
			"Go to the primary result and show a peek view",
			"Go to the primary result and enable peek-less navigation to others",
			"This setting is deprecated, please use separate settings like 'editor.editor.gotoLocation.multipleDefinitions' or 'editor.editor.gotoLocation.multipleImplementations' instead.",
			"Controls the behavior the 'Go to Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Type Definition'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Declaration'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to Implementations'-command when multiple target locations exist.",
			"Controls the behavior the 'Go to References'-command when multiple target locations exist.",
			"Alternative command id that is being executed when the result of 'Go to Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Type Definition' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Declaration' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Implementation' is the current location.",
			"Alternative command id that is being executed when the result of 'Go to Reference' is the current location.",
			"Controls whether the hover is shown.",
			"Controls the delay in milliseconds after which the hover is shown.",
			"Controls whether the hover should remain visible when mouse is moved over it.",
			"Enables the code action lightbulb in the editor.",
			"Controls the line height. Use 0 to compute the line height from the font size.",
			"Controls whether the minimap is shown.",
			"The minimap has the same size as the editor contents (and might scroll).",
			"The minimap will stretch or shrink as necessary to fill the height of the editor (no scrolling).",
			"The minimap will shrink as necessary to never be larger than the editor (no scrolling).",
			"Controls the size of the minimap.",
			"Controls the side where to render the minimap.",
			"Controls when the minimap slider is shown.",
			"Scale of content drawn in the minimap: 1, 2 or 3.",
			"Render the actual characters on a line as opposed to color blocks.",
			"Limit the width of the minimap to render at most a certain number of columns.",
			"Controls the amount of space between the top edge of the editor and the first line.",
			"Controls the amount of space between the bottom edge of the editor and the last line.",
			"Enables a pop-up that shows parameter documentation and type information as you type.",
			"Controls whether the parameter hints menu cycles or closes when reaching the end of the list.",
			"Enable quick suggestions inside strings.",
			"Enable quick suggestions inside comments.",
			"Enable quick suggestions outside of strings and comments.",
			"Controls whether suggestions should automatically show up while typing.",
			"Line numbers are not rendered.",
			"Line numbers are rendered as absolute number.",
			"Line numbers are rendered as distance in lines to cursor position.",
			"Line numbers are rendered every 10 lines.",
			"Controls the display of line numbers.",
			"Number of monospace characters at which this editor ruler will render.",
			"Color of this editor ruler.",
			"Render vertical rulers after a certain number of monospace characters. Use multiple values for multiple rulers. No rulers are drawn if array is empty.",
			"Insert suggestion without overwriting text right of the cursor.",
			"Insert suggestion and overwrite text right of the cursor.",
			"Controls whether words are overwritten when accepting completions. Note that this depends on extensions opting into this feature.",
			"Controls whether filtering and sorting suggestions accounts for small typos.",
			"Controls whether sorting favours words that appear close to the cursor.",
			"Controls whether remembered suggestion selections are shared between multiple workspaces and windows (needs `#editor.suggestSelection#`).",
			"Controls whether an active snippet prevents quick suggestions.",
			"Controls whether to show or hide icons in suggestions.",
			"Controls how many suggestions IntelliSense will show before showing a scrollbar (maximum 15).",
			"This setting is deprecated, please use separate settings like 'editor.suggest.showKeywords' or 'editor.suggest.showSnippets' instead.",
			"When enabled IntelliSense shows `method`-suggestions.",
			"When enabled IntelliSense shows `function`-suggestions.",
			"When enabled IntelliSense shows `constructor`-suggestions.",
			"When enabled IntelliSense shows `field`-suggestions.",
			"When enabled IntelliSense shows `variable`-suggestions.",
			"When enabled IntelliSense shows `class`-suggestions.",
			"When enabled IntelliSense shows `struct`-suggestions.",
			"When enabled IntelliSense shows `interface`-suggestions.",
			"When enabled IntelliSense shows `module`-suggestions.",
			"When enabled IntelliSense shows `property`-suggestions.",
			"When enabled IntelliSense shows `event`-suggestions.",
			"When enabled IntelliSense shows `operator`-suggestions.",
			"When enabled IntelliSense shows `unit`-suggestions.",
			"When enabled IntelliSense shows `value`-suggestions.",
			"When enabled IntelliSense shows `constant`-suggestions.",
			"When enabled IntelliSense shows `enum`-suggestions.",
			"When enabled IntelliSense shows `enumMember`-suggestions.",
			"When enabled IntelliSense shows `keyword`-suggestions.",
			"When enabled IntelliSense shows `text`-suggestions.",
			"When enabled IntelliSense shows `color`-suggestions.",
			"When enabled IntelliSense shows `file`-suggestions.",
			"When enabled IntelliSense shows `reference`-suggestions.",
			"When enabled IntelliSense shows `customcolor`-suggestions.",
			"When enabled IntelliSense shows `folder`-suggestions.",
			"When enabled IntelliSense shows `typeParameter`-suggestions.",
			"When enabled IntelliSense shows `snippet`-suggestions.",
			"When enabled IntelliSense shows `user`-suggestions.",
			"When enabled IntelliSense shows `issues`-suggestions.",
			"Controls the visibility of the status bar at the bottom of the suggest widget.",
			"Controls whether suggestions should be accepted on commit characters. For example, in JavaScript, the semi-colon (`;`) can be a commit character that accepts a suggestion and types that character.",
			"Only accept a suggestion with `Enter` when it makes a textual change.",
			"Controls whether suggestions should be accepted on `Enter`, in addition to `Tab`. Helps to avoid ambiguity between inserting new lines or accepting suggestions.",
			"Controls the number of lines in the editor that can be read out by a screen reader. Warning: this has a performance implication for numbers larger than the default.",
			"Editor content",
			"Use language configurations to determine when to autoclose brackets.",
			"Autoclose brackets only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close brackets after the user adds an opening bracket.",
			"Type over closing quotes or brackets only if they were automatically inserted.",
			"Controls whether the editor should type over closing quotes or brackets.",
			"Use language configurations to determine when to autoclose quotes.",
			"Autoclose quotes only when the cursor is to the left of whitespace.",
			"Controls whether the editor should automatically close quotes after the user adds an opening quote.",
			"The editor will not insert indentation automatically.",
			"The editor will keep the current line's indentation.",
			"The editor will keep the current line's indentation and honor language defined brackets.",
			"The editor will keep the current line's indentation, honor language defined brackets and invoke special onEnterRules defined by languages.",
			"The editor will keep the current line's indentation, honor language defined brackets, invoke special onEnterRules defined by languages, and honor indentationRules defined by languages.",
			"Controls whether the editor should automatically adjust the indentation when users type, paste, move or indent lines.",
			"Use language configurations to determine when to automatically surround selections.",
			"Surround with quotes but not brackets.",
			"Surround with brackets but not quotes.",
			"Controls whether the editor should automatically surround selections.",
			"Controls whether the editor shows CodeLens.",
			"Controls whether the editor should render the inline color decorators and color picker.",
			"Enable that the selection with the mouse and keys is doing column selection.",
			"Controls whether syntax highlighting should be copied into the clipboard.",
			"Control the cursor animation style.",
			"Controls whether the smooth caret animation should be enabled.",
			"Controls the cursor style.",
			"Controls the minimal number of visible leading and trailing lines surrounding the cursor. Known as 'scrollOff' or `scrollOffset` in some other editors.",
			"`cursorSurroundingLines` is enforced only when triggered via the keyboard or API.",
			"`cursorSurroundingLines` is enforced always.",
			"Controls when `cursorSurroundingLines` should be enforced.",
			"Controls the width of the cursor when `#editor.cursorStyle#` is set to `line`.",
			"Controls whether the editor should allow moving selections via drag and drop.",
			"Scrolling speed multiplier when pressing `Alt`.",
			"Controls whether the editor has code folding enabled.",
			"Use a language-specific folding strategy if available, else the indentation-based one.",
			"Use the indentation-based folding strategy.",
			"Controls the strategy for computing folding ranges.",
			"Controls whether the editor should highlight folded ranges.",
			"Controls whether clicking on the empty content after a folded line will unfold the line.",
			"Controls the font family.",
			"Controls the font weight.",
			"Controls whether the editor should automatically format the pasted content. A formatter must be available and the formatter should be able to format a range in a document.",
			"Controls whether the editor should automatically format the line after typing.",
			"Controls whether the editor should render the vertical glyph margin. Glyph margin is mostly used for debugging.",
			"Controls whether the cursor should be hidden in the overview ruler.",
			"Controls whether the editor should highlight the active indent guide.",
			"Controls the letter spacing in pixels.",
			"Controls whether the editor should detect links and make them clickable.",
			"Highlight matching brackets.",
			"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.",
			"Zoom the font of the editor when using mouse wheel and holding `Ctrl`.",
			"Merge multiple cursors when they are overlapping.",
			"Maps to `Control` on Windows and Linux and to `Command` on macOS.",
			"Maps to `Alt` on Windows and Linux and to `Option` on macOS.",
			"The modifier to be used to add multiple cursors with the mouse. The Go To Definition and Open Link mouse gestures will adapt such that they do not conflict with the multicursor modifier. [Read more](https://code.visualstudio.com/docs/editor/codebasics#_multicursor-modifier).",
			"Each cursor pastes a single line of the text.",
			"Each cursor pastes the full text.",
			"Controls pasting when the line count of the pasted text matches the cursor count.",
			"Controls whether the editor should highlight semantic symbol occurrences.",
			"Controls whether a border should be drawn around the overview ruler.",
			"Focus the tree when opening peek",
			"Focus the editor when opening peek",
			"Controls whether to focus the inline editor or the tree in the peek widget.",
			"Controls whether the Go to Definition mouse gesture always opens the peek widget.",
			"Controls the delay in milliseconds after which quick suggestions will show up.",
			"Controls whether the editor auto renames on type.",
			"Controls whether the editor should render control characters.",
			"Controls whether the editor should render indent guides.",
			"Render last line number when the file ends with a newline.",
			"Highlights both the gutter and the current line.",
			"Controls how the editor should render the current line highlight.",
			"Controls if the editor should render the current line highlight only when the editor is focused",
			"Render whitespace characters except for single spaces between words.",
			"Render whitespace characters only on selected text.",
			"Controls how the editor should render whitespace characters.",
			"Controls whether selections should have rounded corners.",
			"Controls the number of extra characters beyond which the editor will scroll horizontally.",
			"Controls whether the editor will scroll beyond the last line.",
			"Scroll only along the predominant axis when scrolling both vertically and horizontally at the same time. Prevents horizontal drift when scrolling vertically on a trackpad.",
			"Controls whether the Linux primary clipboard should be supported.",
			"Controls whether the editor should highlight matches similar to the selection.",
			"Always show the folding controls.",
			"Only show the folding controls when the mouse is over the gutter.",
			"Controls when the folding controls on the gutter are shown.",
			"Controls fading out of unused code.",
			"Show snippet suggestions on top of other suggestions.",
			"Show snippet suggestions below other suggestions.",
			"Show snippets suggestions with other suggestions.",
			"Do not show snippet suggestions.",
			"Controls whether snippets are shown with other suggestions and how they are sorted.",
			"Controls whether the editor will scroll using an animation.",
			"Font size for the suggest widget. When set to `0`, the value of `#editor.fontSize#` is used.",
			"Line height for the suggest widget. When set to `0`, the value of `#editor.lineHeight#` is used.",
			"Controls whether suggestions should automatically show up when typing trigger characters.",
			"Always select the first suggestion.",
			"Select recent suggestions unless further typing selects one, e.g. `console.| -> console.log` because `log` has been completed recently.",
			"Select suggestions based on previous prefixes that have completed those suggestions, e.g. `co -> console` and `con -> const`.",
			"Controls how suggestions are pre-selected when showing the suggest list.",
			"Tab complete will insert the best matching suggestion when pressing tab.",
			"Disable tab completions.",
			"Tab complete snippets when their prefix match. Works best when 'quickSuggestions' aren't enabled.",
			"Enables tab completions.",
			"Inserting and deleting whitespace follows tab stops.",
			"Characters that will be used as word separators when doing word related navigations or operations.",
			"Lines will never wrap.",
			"Lines will wrap at the viewport width.",
			"Lines will wrap at `#editor.wordWrapColumn#`.",
			"Lines will wrap at the minimum of viewport and `#editor.wordWrapColumn#`.",
			"Controls how lines should wrap.",
			"Controls the wrapping column of the editor when `#editor.wordWrap#` is `wordWrapColumn` or `bounded`.",
			"No indentation. Wrapped lines begin at column 1.",
			"Wrapped lines get the same indentation as the parent.",
			"Wrapped lines get +1 indentation toward the parent.",
			"Wrapped lines get +2 indentation toward the parent.",
			"Controls the indentation of wrapped lines.",
			"Assumes that all characters are of the same width. This is a fast algorithm that works correctly for monospace fonts and certain scripts (like Latin characters) where glyphs are of equal width.",
			"Delegates wrapping points computation to the browser. This is a slow algorithm, that might cause freezes for large files, but it works correctly in all cases.",
			"Controls the algorithm that computes wrapping points."
		],
		"vs/workbench/api/common/extHostProgress": [
			"{0} (Extension)"
		],
		"vs/workbench/api/common/extHostStatusBar": [
			"Extension Status"
		],
		"vs/workbench/api/common/extHostTreeViews": [
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"No tree view with id '{0}' registered.",
			"Element with id {0} is already registered"
		]
	},
	"bundles": {
		"vs/server/remoteExtensionHostAgent": [
			"vs/base/common/date",
			"vs/base/common/errorMessage",
			"vs/base/common/jsonErrorMessages",
			"vs/base/common/severity",
			"vs/base/node/processes",
			"vs/base/node/zip",
			"vs/code/node/cliProcessMain",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/environment/node/argv",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/extensionManagement/node/extensionManagementService",
			"vs/platform/extensionManagement/node/extensionManagementUtil",
			"vs/platform/extensions/common/extensionValidator",
			"vs/platform/files/common/fileService",
			"vs/platform/files/common/files",
			"vs/platform/files/common/io",
			"vs/platform/files/node/diskFileSystemProvider",
			"vs/platform/request/common/request",
			"vs/platform/telemetry/common/telemetryService",
			"vs/server/remoteAgentEnvironmentImpl",
			"vs/workbench/services/extensions/node/extensionPoints"
		],
		"vs/server/remoteCli": [
			"vs/platform/environment/node/argv"
		],
		"vs/server/remoteExtensionHostProcess": [
			"vs/base/common/date",
			"vs/base/common/errorMessage",
			"vs/base/common/severity",
			"vs/base/node/processes",
			"vs/editor/common/config/editorOptions",
			"vs/platform/configuration/common/configurationRegistry",
			"vs/platform/extensionManagement/common/extensionManagement",
			"vs/platform/files/common/files",
			"vs/platform/markers/common/markers",
			"vs/platform/workspaces/common/workspaces",
			"vs/workbench/api/common/extHost.api.impl",
			"vs/workbench/api/common/extHostDiagnostics",
			"vs/workbench/api/common/extHostExtensionActivator",
			"vs/workbench/api/common/extHostExtensionService",
			"vs/workbench/api/common/extHostProgress",
			"vs/workbench/api/common/extHostStatusBar",
			"vs/workbench/api/common/extHostTreeViews",
			"vs/workbench/api/common/extHostWorkspace",
			"vs/workbench/api/node/extHostDebugService",
			"vs/workbench/contrib/debug/node/debugAdapter",
			"vs/workbench/contrib/externalTerminal/node/externalTerminalService",
			"vs/workbench/contrib/terminal/common/terminal",
			"vs/workbench/services/configurationResolver/common/variableResolver"
		],
		"vs/platform/files/node/watcher/unix/watcherApp": [
			"vs/base/node/processes",
			"vs/platform/files/common/files"
		],
		"vs/platform/files/node/watcher/nsfw/watcherApp": [
			"vs/base/node/processes",
			"vs/platform/files/common/files"
		]
	}
}